<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="20.11.1.0">
<procedure name="main">
<interface/>
<body>
<c>* This example program shows how to use lines_color and the differences</c>
<c>* between the output of lines_color and lines_gauss using an image in which</c>
<c>* some lines can only be extracted from a color image.</c>
<l>dev_update_off ()</l>
<l>dev_close_window ()</l>
<l>dev_open_window (0, 0, 640, 480, 'black', WindowHandle)</l>
<c></c>
<l>CameraParameters := ['area_scan_tilt_division',0.0018288,29542.1,1.54337e-05,0.00760852,33.9548,3.00103e-06,3e-06,310.091,239.571,640,480]</l>
<l>CameraPose := [0.0643385,-0.0186334,0.435375,1.07932,358.678,179.803,0]</l>
<c></c>
<l>read_image (Image, 'D:/GITHUB/learningMV/images/line1.jpg')</l>
<l>read_image (Image, 'c:/test4.jpg')</l>
<l>dev_display (Image)</l>
<c></c>
<c>* Extract color lines from the image.  Note that since the color line extractor</c>
<c>* cannot discern between bright or dark lines (in fact, this criterion does not</c>
<c>* even make sense for color lines), the lines corresponding to the colored</c>
<c>* cables are simply selected based on their length.</c>
<l>lines_color (Image, Lines, 3.5, 0, 12, 'true', 'false')</l>
<l>select_contours_xld (Lines, LongLines, 'contour_length', 20, 100000, 0, 0)</l>
<l>dev_display (Image)</l>
<c></c>
<l>count_obj (LongLines, Number)</l>
<l>gen_empty_obj (EdgesL)</l>
<l>gen_empty_obj (EdgesR)</l>
<l>K :=32</l>
<l>select_obj (LongLines, Line, K)</l>
<l>get_contour_xld (Line, Row, Col)</l>
<l>get_contour_attrib_xld (Line, 'angle', Angle)</l>
<l>get_contour_attrib_xld (Line, 'width_right', WidthR)</l>
<l>get_contour_attrib_xld (Line, 'width_left', WidthL)</l>
<l>EdgeRR := Row + cos(Angle) * WidthR</l>
<l>EdgeRC := Col + sin(Angle) * WidthR</l>
<l>EdgeLR := Row - cos(Angle) * WidthL</l>
<l>EdgeLC := Col - sin(Angle) * WidthL</l>
<l>gen_contour_polygon_xld (EdgeR, EdgeRR, EdgeRC)</l>
<l>gen_contour_polygon_xld (EdgeL, EdgeLR, EdgeLC)</l>
<l>concat_obj (EdgesL, EdgeL, EdgesL)</l>
<l>concat_obj (EdgesR, EdgeR, EdgesR)</l>
<c></c>
<l>dev_set_line_width (2)</l>
<l>dev_set_color ('red')</l>
<l>dev_display (Line)</l>
<c></c>
<l>dev_set_line_width (1)</l>
<l>dev_set_color ('yellow')</l>
<l>dev_display (EdgeL)</l>
<l>dev_display (EdgeR)</l>
<l>image_points_to_world_plane (CameraParameters, CameraPose, Row, Col, 'mm', WorldX, WorldY)</l>
<c>    </c>
<l>Number := |WorldX|</l>
<l>dist := 0.0</l>
<l>for I := 1 to Number-1 by 1</l>
<c>    </c>
<c>   </c>
<l>    distance_pp(WorldX[I-1], WorldY[I-1],WorldX[I], WorldY[I],distTmp)</l>
<l>    dist := dist+distTmp</l>
<l>endfor</l>
<c></c>
<l>* rgb1_to_gray (Image, GrayImage)</l>
<c></c>
<c></c>
<l>* lines_gauss (GrayImage, LinesGray, 3.5, 0.0, 0.7, 'light', 'true', 'bar-shaped', 'false')</l>
<l>* select_contours_xld (LinesGray, LongGrayLines, 'contour_length', 50, 100000, 0, 0)</l>
<c></c>
<l>* count_obj (LongGrayLines, Number)</l>
<l>* gen_empty_obj (EdgesGrayL)</l>
<l>* gen_empty_obj (EdgesGrayR)</l>
<l>* for K := 1 to Number by 1</l>
<l>*     select_obj (LongGrayLines, Line, K)</l>
<l>*     get_contour_xld (Line, Row, Col)</l>
<l>*     get_contour_attrib_xld (Line, 'angle', Angle)</l>
<l>*     get_contour_attrib_xld (Line, 'width_right', WidthR)</l>
<l>*     get_contour_attrib_xld (Line, 'width_left', WidthL)</l>
<l>*     EdgeRR := Row + cos(Angle) * WidthR</l>
<l>*     EdgeRC := Col + sin(Angle) * WidthR</l>
<l>*     EdgeLR := Row - cos(Angle) * WidthL</l>
<l>*     EdgeLC := Col - sin(Angle) * WidthL</l>
<l>*     gen_contour_polygon_xld (EdgeR, EdgeRR, EdgeRC)</l>
<l>*     gen_contour_polygon_xld (EdgeL, EdgeLR, EdgeLC)</l>
<l>*     concat_obj (EdgesGrayL, EdgeL, EdgesGrayL)</l>
<l>*     concat_obj (EdgesGrayR, EdgeR, EdgesGrayR)</l>
<l>* endfor</l>
<c></c>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
